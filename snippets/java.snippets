snippet p
	System.out.print(${1});
snippet pn
	System.out.println(${1});
snippet enum
	${1:public }enum {
		${2}
	}
snippet main
	public static void main(String[] args) {
		${1:/* code */}
	}
snippet pu
	public ${1}
snippet po
	protected ${1}
snippet pr
	private ${1}
snippet st
	static ${1}
snippet fi
	final ${1}
snippet ab
	abstract ${1}
snippet re
	return${1}
snippet br
	break;${1}
snippet de
	default:
		${1}
snippet ca
	catch(${1:Exception} ${2:e}) ${3}
snippet th
	throw${1}
snippet sy
	synchronized${1}
snippet im
	import ${1}
snippet imp
	implements ${1}
snippet ext
	extends  ${1}
snippet j.u
	java.util
snippet j.i
	java.io.
snippet j.b
	java.beans.
snippet j.n
	java.net.
snippet j.m
	java.math.
snippet if
	if (${1:true}) {
		${2}
	}
snippet el
	else {
		${2}
	}
snippet elif
	else if (${1}) {
		${2}
	} 
snippet wh
	while (${1}) {
		${2}
	} 
snippet for
	for (${1:int i = 0}; ${2:i < 10}; ${3:i++}) {
		${4}
	} 
snippet fore
	for (${1} : ${2}) ${3}
snippet sw
	switch (${1}) ${2}
snippet cs
	case ${1}:
		${2}
	${3}
snippet tc
	public class ${1:`Filename()`} extends ${2:TestCase}
snippet t
	public void test${1:Name}() throws Exception ${2}
snippet cl
	class ${1:`Filename("", "untitled")`} ${2}
snippet in
	interface ${1:`Filename("", "untitled")`} ${2:extends Parent}${3}
snippet m
	${1:void} ${2:method}(${3}) ${4:throws }${5}
snippet v
	${1:String} ${2:var}${3: = null}${4};${5}
snippet co
	static public final ${1:String} ${2:var} = ${3};${4}
snippet cos
	static public final String ${1:var} = "${2}";${3}
snippet as
	assert ${1:test} : "${2:Failure message}";${3}
snippet try
	try {
		${3}
	} catch(${1:Exception} ${2:e}) {
	}
snippet tryf
	try {
		${3}
	} catch(${1:Exception} ${2:e}) {
	} finally {
	}
snippet rst
	ResultSet ${1:rst}${2: = null}${3};${4}
